
// NEXUS_URL = com url do nexus, configurado no environments globla do Jenkins
// nexus-credentials = credentials com user e senha do nexus

import groovy.json.JsonSlurper
nexusVersions = []
TAG=""

def listVersionsNexus(environment, repo) {
    def response = sh(script:"curl -u ${env.NEXUS_CREDENTIALS} -X 'GET' 'http://${env.NEXUS_URL}/service/rest/v1/search?q=${environment}&repository=${repo}' -H 'accept: application/json' -H 'NX-ANTI-CSRF-TOKEN: 0.5838090561427705' -H 'X-Nexus-UI: true'", returnStdout: true)
    //def response = sh(script:"curl -u ${NEXUS_CREDENTIALS} -X 'GET' 'http://${env.NEXUS_URL}/service/rest/v1/search?q=PRD&repository=nsw-front-example-nexus' -H 'accept: application/json' -H 'NX-ANTI-CSRF-TOKEN: 0.5838090561427705' -H 'X-Nexus-UI: true'", returnStdout: true)
    def count = new JsonSlurper().parseText(response).items.assets.size()
    echo "TEST"

        for (ii = 0; ii < count; ii++){
            def content_type = new JsonSlurper().parseText(response).items.assets[ii].contentType[0]
            if (content_type == 'application/zip') {
                def downloadUrl = new JsonSlurper().parseText(response).items.assets[ii].downloadUrl[0]
                def nexusVersion = sh(script: "echo $downloadUrl | awk -F'/' '{print \$8}'", returnStdout: true)
                nexusVersions+=("$nexusVersion")
                println("ADD TAG: $nexusVersion ")
            }

       }
       
      return nexusVersions
}

pipeline{
    agent any
    environment {
        TAG=""
        NEXUS_CREDENTIALS = credentials('nexus-credentials')
    }
    stages {
        stage('Prepare') {
            steps {
                script {
                    
                    def userInput = input(
                        id: 'userInput', message: 'input parameters', 
                        parameters: [[
                            $class: 'ChoiceParameterDefinition',
                            name: 'ami',
                            choices: listVersionsNexus("DEV", "nsw-front-example-nexus"),
                            description: 'Versions',
                        ],]
                    )

                    echo ("Selected Versions :: "+userInput)
                }
            }
        }
    }
}
